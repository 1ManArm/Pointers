#include <iostream>

template <typename T>
void my_swap(T num1, T num2) {
	T tmp = num1;
	num1 = num2;
	num2 = tmp;
}

template <typename T>
void p_swap(T* pnum1, T* pnum2) {
	T tmp = *pnum1;
	*pnum1 = *pnum2;
	*pnum2 = tmp;
}

int main() {
	setlocale(LC_ALL, "Russian");
	int n, m;

	//Указатели на переменные
	/*n = 10; m = 20;
	//Указатель - переменная, созданная для хранения в себе адреса N-ой области памяти. Например, адрес созданной ранее переменной.
	std::cout << "n = " << n << std::endl; //значение переменной
	std::cout << "&n = " << &n << std::endl; //адрес переменной
	int *pn = &n; //создание указателя, направленного на переменную n

	std::cout << "pn = " << pn << std::endl;
	std::cout << "*pn = " << *pn << std::endl;

	//Разыменование указателя - операция, применяемая только к указателям и позволяющая обратиться к объекту, на который направлен указатель
	*pn = 15; //обращение к переменной n через разыменование указателя pn
	std::cout << "Новая n = " << n << std::endl;

	pn = &m; //перенаправление указателя на переменную m
	std::cout << "&m = " << &m << std::endl;
	std::cout << "pn = " << &m << std::endl;

	int* pm = &m;
	std::cout << "pm = " << pm << std::endl;
	*pm = 25;
	std::cout << "m = " << m << std::endl;
	std::cout << "*pn = " << *pn << std::endl;
	std::cout << "*pm = " << *pm << std::endl;*/

	//Указатели в массивах
	/*const int size = 5;
	int arr[size]{ 9, 3, 2, 7, 5 };
	int* pa2 = &arr[2];
	std::cout << "*pa2 = " << *pa2 << std::endl;
	pa2++;
	std::cout << "*pa2 = " << *pa2 << std::endl;
	//Арифметика указателей - процесс сдвига указателей относительно их текущего значения вперед/назад в зависимости от применяемого к ним сложения/вычитания соответственно.

	//Ограничения арифметики указателей:
	//1. Только сложение и вычитание;
	//2. Нельзя складывать адреса, но можно вычитать;
	//3. Нельзя работать с вещественным типом данных.

	pa2 = &arr[0];
	for (int i = 0; i < size; i++)
		std::cout << *(pa2 + i) << ' ';
	std::cout << std::endl;

	std::cout << "arr = " << arr << std::endl;
	std::cout << "pa2 = " << pa2 << std::endl;

	//Имя массива - указатель на его первый элемент, или же указатель на место в памяти, из которой начинается последовательность элементов. Данный указатель не может быть направлен на другую область памяти

	int sum = 0;
	for (int i = 0; i < size; i++)
		sum += *(arr + i);
	std::cout << "Сумма: " << sum << std::endl;
	//arr = &n; //Ошибка!

	//Размерность указателя НЕ зависит от типа данных, на который он направлен. Зависит он от разрядности ОС. В 64-битных - 8 байт, в 32-битных - 4 байта.*/

	//Указатели и функции
	n = 7; m = 15;
	std::cout << n << ' ' << m << std::endl;
	//my_swap(n, m); Не работает, т. к. параметры - копии аргументов
	p_swap(&n, &m);
	std::cout << n << ' ' << m << std::endl;

	//Области применения указателей:
	//1. Работа с массивами;
	//2. Удаленный доступ к данным;
	//3. Выделение динамической памяти;
	//4. Экономия памяти.

	return 0;
}